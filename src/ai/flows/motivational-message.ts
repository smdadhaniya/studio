// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates personalized motivational messages for users achieving milestones.
 *
 * - generateMotivationalMessage - A function that generates a motivational message based on user progress.
 * - MotivationalMessageInput - The input type for the generateMotivationalMessage function.
 * - MotivationalMessageOutput - The return type for the generateMotivationalMessage function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MotivationalMessageInputSchema = z.object({
  habitName: z.string().describe('The name of the habit the user is tracking.'),
  userName: z.string().describe('The name of the user.'),
  streakLength: z.number().describe('The current streak length for the habit.'),
  milestoneAchieved: z.string().describe('The milestone the user has achieved (e.g., completed 7 days, reached level 5).'),
  brokenStreak: z.boolean().describe('Whether or not the user has broken a streak.'),
});
export type MotivationalMessageInput = z.infer<typeof MotivationalMessageInputSchema>;

const MotivationalMessageOutputSchema = z.object({
  message: z.string().describe('The personalized motivational message for the user.'),
});
export type MotivationalMessageOutput = z.infer<typeof MotivationalMessageOutputSchema>;

export async function generateMotivationalMessage(input: MotivationalMessageInput): Promise<MotivationalMessageOutput> {
  return motivationalMessageFlow(input);
}

const motivationalMessagePrompt = ai.definePrompt({
  name: 'motivationalMessagePrompt',
  input: {schema: MotivationalMessageInputSchema},
  output: {schema: MotivationalMessageOutputSchema},
  prompt: `You are an AI assistant that provides personalized motivational messages to users who are building habits.

  The user's name is {{{userName}}}. The habit they are working on is {{{habitName}}}. Their current streak length is {{{streakLength}}}. They have achieved the following milestone: {{{milestoneAchieved}}}.

  Write a short, encouraging message to the user.  If the user broke a streak, then include an empathetic statement acknowledging the broken streak. If the user has NOT broken a streak, encourage them to continue their progress.
  `,
});

const motivationalMessageFlow = ai.defineFlow(
  {
    name: 'motivationalMessageFlow',
    inputSchema: MotivationalMessageInputSchema,
    outputSchema: MotivationalMessageOutputSchema,
  },
  async input => {
    const {output} = await motivationalMessagePrompt(input);
    return output!;
  }
);
